apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: headscale
  namespace: headscale
  annotations:
    cert-manager.io/cluster-issuer: scaleway
    nginx.ingress.kubernetes.io/whitelist-source-range: 0.0.0.0/0
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/proxy-http-version: "1.1"
    nginx.ingress.kubernetes.io/proxy-buffering: "off"
    nginx.ingress.kubernetes.io/proxy-set-headers: |
      Host $host
      X-Real-IP $remote_addr
      X-Forwarded-For $proxy_add_x_forwarded_for
      X-Forwarded-Proto $scheme
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/hsts: "true"
    nginx.ingress.kubernetes.io/hsts-include-subdomains: "true"
    nginx.ingress.kubernetes.io/hsts-max-age: "15552000"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/enable-websocket: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: portal.public.soulkyu.net
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: headscale
                port:
                  number: 8080
  tls:
    - hosts:
        - portal.public.soulkyu.net
      secretName: portal.public.soulkyu.net-tls