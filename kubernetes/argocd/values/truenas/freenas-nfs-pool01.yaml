csiDriver:
  # should be globally unique for a given cluster
  name: "org.democratic-csi.nfs.pool01"
  version: 1.5.0
controller:
  driver:
    image: docker.io/democraticcsi/democratic-csi:latest
csiProxy:
  enabled: true
  image: docker.io/democraticcsi/csi-grpc-proxy:v0.5.6

node:
  driver:
    image: docker.io/democraticcsi/democratic-csi:latest
driver:
  image: docker.io/democraticcsi/democratic-csi:latest
  config:
    driver: freenas-nfs
    instance_id: truenas
    httpConnection:
      protocol: http
      host: 192.168.1.200
      port: 80
      # use only 1 of apiKey or username/password
      # if both are present, apiKey is preferred
      # apiKey is only available starting in TrueNAS-12
      #apiKey: 1-UVihAuHz6ByNmEEKu5TsmJq9dBQR4Ib9ewb9dvkvRW5NyqBQyjP3G55GvL34ROzp
      username: ${vault:secrets/data/truenas#user}
      password: ${vault:secrets/data/truenas#password}
      allowInsecure: true
      # use apiVersion 2 for TrueNAS-12 and up (will work on 11.x in some scenarios as well)
      # leave unset for auto-detection
      #apiVersion: 2
    sshConnection:
      host: 192.168.1.200
      port: 22
      username: ${vault:secrets/data/truenas#user}
      password: ${vault:secrets/data/truenas#password}
    zfs:
      # can be used to override defaults if necessary
      # the example below is useful for TrueNAS 12
      #cli:
      #  sudoEnabled: true
      #
      #  leave paths unset for auto-detection
      #  paths:
      #    zfs: /usr/local/sbin/zfs
      #    zpool: /usr/local/sbin/zpool
      #    sudo: /usr/local/bin/sudo
      #    chroot: /usr/sbin/chroot

      # can be used to set arbitrary values on the dataset/zvol
      # can use handlebars templates with the parameters from the storage class/CO
      #datasetProperties:
      #  "org.freenas:description": "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}/{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
      #  "org.freenas:test": "{{ parameters.foo }}"
      #  "org.freenas:test2": "some value"

      datasetParentName: POOL1/k8s/vols
      # do NOT make datasetParentName and detachedSnapshotsDatasetParentName overlap
      # they may be siblings, but neither should be nested in the other
      # do NOT comment this option out even if you don't plan to use snapshots, just leave it with dummy value
      detachedSnapshotsDatasetParentName: POOL1/k8s/snaps
      datasetEnableQuotas: true
      datasetEnableReservation: false
      datasetPermissionsMode: "0777"
      datasetPermissionsUser: 0
      datasetPermissionsGroup: 0

      # not supported yet
      #datasetPermissionsAcls:
      #- "-m everyone@:full_set:allow"
      #- "-m u:kube:full_set:allow"

    nfs:
      #shareCommentTemplate: "{{ parameters.[csi.storage.k8s.io/pvc/namespace] }}-{{ parameters.[csi.storage.k8s.io/pvc/name] }}"
      shareHost: 192.168.1.200
      shareAlldirs: false
      shareAllowedHosts: []
      shareAllowedNetworks: []
      shareMaprootUser: root
      shareMaprootGroup: wheel
      shareMapallUser: ""
      shareMapallGroup: ""

# add note here about volume expansion requirements
storageClasses:
- name: freenas-nfs-csi-pool1
  defaultClass: false
  reclaimPolicy: Retain
  volumeBindingMode: Immediate
  allowVolumeExpansion: true
  parameters:
    # for block-based storage can be ext3, ext4, xfs
    # for nfs should be nfs
    fsType: nfs
      
    # if true, volumes created from other snapshots will be
    # zfs send/received instead of zfs cloned
    # detachedVolumesFromSnapshots: "false"
    
    # if true, volumes created from other volumes will be
    # zfs send/received instead of zfs cloned
    # detachedVolumesFromVolumes: "false"
  mountOptions:
  - noatime
  - nfsvers=4
  secrets:
    provisioner-secret:
    controller-publish-secret:
    node-stage-secret:
    node-publish-secret:
    controller-expand-secret: